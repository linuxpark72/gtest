cmake_minimum_required(VERSION 2.8.7)
project(unittest_bluetooth)

set(CMAKE_CXX_STANDARD 11)
set(WITH_DLT OFF)
set(RUN_YOCTO OFF)
set(FOR_UNIT_TEST ON)

# including platform-interface headers
include_directories(${CMAKE_SOURCE_DIR})

find_package(PkgConfig REQUIRED)
pkg_check_modules(GIO REQUIRED gio-2.0)
include_directories(${GIO_INCLUDE_DIRS})
link_directories(${GIO_LIBRARY_DIRS})

pkg_check_modules(GLIB REQUIRED glib-2.0)
include_directories(${GLIB_INCLUDE_DIRS})
link_directories(${GLIB_LIBRARY_DIRS})

pkg_check_modules(GOBJECT REQUIRED gobject-2.0)
include_directories(${GOBJECT_INCLUDE_DIRS})
link_directories(${GOBJECT_LIBRARY_DIRS})

find_package(GTest REQUIRED)
include_directories(${GTEST_INCLUDE_DIRS})


add_executable(unittest_bluetooth sample1.cc sample1_unittest.cc gtest_main.cc)

if(WITH_DLT)
    target_link_libraries (unittest_bluetooth pthread glib-2.0 gio-2.0 gobject-2.0 asound rt dlt ${GTEST_LIBRARIES})
else()
    target_link_libraries (unittest_bluetooth pthread glib-2.0 gio-2.0 gobject-2.0 asound rt ${GTEST_LIBRARIES})
endif()

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--allow-multiple-definition -pthread")

if(FOR_UNIT_TEST)
    set(LOCAL_CFLAGS "--coverage -fprofile-arcs -ftest-coverage")
    set(LOCAL_LDFLAGS "--coverage -lgcov")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXXFLAGS} ${LOCAL_CFLAGS}")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${LOCAL_LDFLAGS}")
endif()

if(RUN_YOCTO)
    set(LINKER_FLAGS_YOCTO "-Wl,--dynamic-linker=/lib/ld-linux-x86-64.so.2")
    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${LINKER_FLAGS_YOCTO}")
endif()

install(TARGETS unittest_bluetooth RUNTIME DESTINATION bin)
